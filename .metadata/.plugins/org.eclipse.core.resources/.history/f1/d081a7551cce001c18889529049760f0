package com.customer.service.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.customer.service.feign.Account;
import com.customer.service.model.Customer;
import com.customer.service.repository.CustomerRepository;

import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

@Service
public class CustomerServiceImpl implements CustomerService {

	@Autowired
	private CustomerRepository customerRepository;

	@Override
	public Mono<Customer> addCustomer(Customer c) {

		return customerRepository.save(c);
	}

	@Override
	public Mono<Customer> updateCustomer(Customer c) {
		int idCustomer = c.getId();
		if(idCustomer < 0){
			c.setId(idCustomer);
		}
		return customerRepository.save(c);
	}

	@Override
	public Flux<Customer> getAllCustomer() {

		return customerRepository.findAll();
	}

	@Override
	public Mono<Customer> getCustomerById(int id) {

		return customerRepository.findById(id);
	}

	@Override
	public Mono<Customer> getCustomerByNroDoc(int nroDocument) {

		return customerRepository.findByNroDocument(nroDocument);
	}

	@Override
	public void deleteCustomer(int id) {
		customerRepository.deleteById(id);

	}

	@Override
	public Mono<Customer> getCustomerByTypeCustomer(String typeCustomer) {
		
		return customerRepository.findByTipeCustomer(typeCustomer);
	}

	@Override
	public Mono<Account> getAccountByNroDoc(int nroDocument) {
		
		return null;
	}

}
